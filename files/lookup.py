""" 
this  code will take 2 arrays as inputs one is reference and the other is incoming 
each array has CMYK pixel values obtained from sampling.py
reference_c and incoming_c will take the C value from reference and incoming
occurances of (0:255) in incoming_c is obtained and average of corresponding values in reference is calculated
this average is the lookup value for input


incoming_c =  [4, 5, 6, 2, 24, 1, 6, 7, 2, 6] 


reference_c =  [1, 2, 1, 2, 3, 12, 23, 2, 12, 3] 

occurances of  1  are,  [5]
average look up value of  1 is,  12 

occurances of  2  are,  [3, 8]
average look up value of  2 is,  7 

occurances of  4  are,  [0]
average look up value of  4 is,  1 

occurances of  5  are,  [1]
average look up value of  5 is,  2 

occurances of  6  are,  [2, 6, 9]
average look up value of  6 is,  9 

occurances of  7  are,  [7]
average look up value of  7 is,  2 

occurances of  24  are,  [4]
average look up value of  24 is,  3 

usage : python3 lookup.py

"""


import numpy as np

reference = [(5, 0, 0, 0), (5, 0, 0, 0), (5, 0, 0, 0), (5, 0, 0, 0), (5, 0, 0, 0), (9, 0, 0, 0), (9, 0, 0, 0), (9, 0, 0, 0), (9, 0, 0, 0), (9, 0, 0, 0), (14, 0, 0, 0), (15, 0, 0, 0), (15, 0, 0, 0), (15, 0, 0, 0), (15, 0, 0, 0), (15, 0, 0, 0), (20, 0, 0, 0), (20, 0, 0, 0), (20, 0, 0, 0), (20, 0, 0, 0), (20, 0, 0, 0), (22, 0, 0, 0), (24, 0, 0, 0), (24, 0, 0, 0), (24, 0, 0, 0), (24, 0, 0, 0), (24, 0, 0, 0), (30, 0, 0, 0), (30, 0, 0, 0), (30, 0, 0, 0), (30, 0, 0, 0), (30, 0, 0, 0), (30, 0, 0, 0), (34, 0, 0, 0), (34, 0, 0, 0), (34, 0, 0, 0), (34, 0, 0, 0), (34, 0, 0, 0), (39, 0, 0, 0), (40, 0, 0, 0), (40, 0, 0, 0), (40, 0, 0, 0), (40, 0, 0, 0), (40, 0, 0, 0), (45, 0, 0, 0), (45, 0, 0, 0), (45, 0, 0, 0), (45, 0, 0, 0), (45, 0, 0, 0), (50, 0, 0, 0), (50, 0, 0, 0), (50, 0, 0, 0), (50, 0, 0, 0), (50, 0, 0, 0), (53, 0, 0, 0), (56, 0, 0, 0), (56, 0, 0, 0), (56, 0, 0, 0), (56, 0, 0, 0), (56, 0, 0, 0), (61, 0, 0, 0), (61, 0, 0, 0), (61, 0, 0, 0), (61, 0, 0, 0), (61, 0, 0, 0), (61, 0, 0, 0), (65, 0, 0, 0), (65, 0, 0, 0), (65, 0, 0, 0), (65, 0, 0, 0), (65, 0, 0, 0), (70, 0, 0, 0), (71, 0, 0, 0), (71, 0, 0, 0), (71, 0, 0, 0), (71, 0, 0, 0), (71, 0, 0, 0), (76, 0, 0, 0), (76, 0, 0, 0), (76, 0, 0, 0), (76, 0, 0, 0), (76, 0, 0, 0), (78, 0, 0, 0), (81, 0, 0, 0), (81, 0, 0, 0), (81, 0, 0, 0), (81, 0, 0, 0), (81, 0, 0, 0), (86, 0, 0, 0), (86, 0, 0, 0), (86, 0, 0, 0), (86, 0, 0, 0), (86, 0, 0, 0), (86, 0, 0, 0), (90, 0, 0, 0), (90, 0, 0, 0), (90, 0, 0, 0), (90, 0, 0, 0), (90, 0, 0, 0), (96, 0, 0, 0), (96, 0, 0, 0), (96, 0, 0, 0), (96, 0, 0, 0), (96, 0, 0, 0), (100, 0, 0, 0), (102, 0, 0, 0), (102, 0, 0, 0), (102, 0, 0, 0), (102, 0, 0, 0), (102, 0, 0, 0), (106, 0, 0, 0), (106, 0, 0, 0), (106, 0, 0, 0), (106, 0, 0, 0), (106, 0, 0, 0), (109, 0, 0, 0), (112, 0, 0, 0), (112, 0, 0, 0), (112, 0, 0, 0), (112, 0, 0, 0), (112, 0, 0, 0), (117, 0, 0, 0), (117, 0, 0, 0), (117, 0, 0, 0), (117, 0, 0, 0), (117, 0, 0, 0), (117, 0, 0, 0), (121, 0, 0, 0), (121, 0, 0, 0), (121, 0, 0, 0), (121, 0, 0, 0), (121, 0, 0, 0), (126, 0, 0, 0), (127, 0, 0, 0), (127, 0, 0, 0), (127, 0, 0, 0), (127, 0, 0, 0), (127, 0, 0, 0), (131, 0, 0, 0), (131, 0, 0, 0), (131, 0, 0, 0), (131, 0, 0, 0), (131, 0, 0, 0), (134, 0, 0, 0), (137, 0, 0, 0), (137, 0, 0, 0), (137, 0, 0, 0), (137, 0, 0, 0), (137, 0, 0, 0), (142, 0, 0, 0), (142, 0, 0, 0), (142, 0, 0, 0), (142, 0, 0, 0), (142, 0, 0, 0), (147, 0, 0, 0), (147, 0, 0, 0), (147, 0, 0, 0), (147, 0, 0, 0), (147, 0, 0, 0), (147, 0, 0, 0), (153, 0, 0, 0), (153, 0, 0, 0), (153, 0, 0, 0), (153, 0, 0, 0), (153, 0, 0, 0), (157, 0, 0, 0), (158, 0, 0, 0), (158, 0, 0, 0), (158, 0, 0, 0), (158, 0, 0, 0), (158, 0, 0, 0), (163, 0, 0, 0), (163, 0, 0, 0), (163, 0, 0, 0), (163, 0, 0, 0), (163, 0, 0, 0), (164, 0, 0, 0), (168, 0, 0, 0), (168, 0, 0, 0), (168, 0, 0, 0), (168, 0, 0, 0), (168, 0, 0, 0), (173, 0, 0, 0), (173, 0, 0, 0), (173, 0, 0, 0), (173, 0, 0, 0), (173, 0, 0, 0), (173, 0, 0, 0), (178, 0, 0, 0), (178, 0, 0, 0), (178, 0, 0, 0), (178, 0, 0, 0), (178, 0, 0, 0), (182, 0, 0, 0), (183, 0, 0, 0), (183, 0, 0, 0), (183, 0, 0, 0), (183, 0, 0, 0), (185, 0, 0, 0), (188, 0, 0, 0), (188, 0, 0, 0), (188, 0, 0, 0), (188, 0, 0, 0), (188, 0, 0, 0), (193, 0, 0, 0), (193, 0, 0, 0), (193, 0, 0, 0), (193, 0, 0, 0), (193, 0, 0, 0), (195, 0, 0, 0), (198, 0, 0, 0), (198, 0, 0, 0), (198, 0, 0, 0), (198, 0, 0, 0), (198, 0, 0, 0), (204, 0, 0, 0), (204, 0, 0, 0), (204, 0, 0, 0), (204, 0, 0, 0), (204, 0, 0, 0), (204, 0, 0, 0), (209, 0, 0, 0), (209, 0, 0, 0), (209, 0, 0, 0), (209, 0, 0, 0), (209, 0, 0, 0), (213, 0, 0, 0), (214, 0, 0, 0), (214, 0, 0, 0), (214, 0, 0, 0), (214, 0, 0, 0), (214, 0, 0, 0), (219, 0, 0, 0), (219, 0, 0, 0), (219, 0, 0, 0), (219, 0, 0, 0), (219, 0, 0, 0), (221, 0, 0, 0), (224, 0, 0, 0), (224, 0, 0, 0), (224, 0, 0, 0), (224, 0, 0, 0), (224, 0, 0, 0), (229, 0, 0, 0), (229, 0, 0, 0), (229, 0, 0, 0), (229, 0, 0, 0), (229, 0, 0, 0), (233, 0, 0, 0), (234, 0, 0, 0), (234, 0, 0, 0), (234, 0, 0, 0), (234, 0, 0, 0), (234, 0, 0, 0), (239, 0, 0, 0), (239, 0, 0, 0), (239, 0, 0, 0), (239, 0, 0, 0), (239, 0, 0, 0), (243, 0, 0, 0), (244, 0, 0, 0), (244, 0, 0, 0), (244, 0, 0, 0), (244, 0, 0, 0), (244, 0, 0, 0), (249, 0, 0, 0), (249, 0, 0, 0), (249, 0, 0, 0), (249, 0, 0, 0), (249, 0, 0, 0), (251, 0, 0, 0), (255, 0, 0, 0), (255, 0, 0, 0), (255, 0, 0, 0), (255, 0, 0, 0)]
incoming = [(0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (2, 0, 1, 0), (1, 1, 0, 0), (2, 1, 0, 0), (3, 1, 0, 0), (2, 0, 1, 0), (5, 1, 0, 1), (6, 1, 0, 1), (5, 1, 0, 1), (5, 1, 0, 1), (5, 1, 0, 1), (6, 1, 0, 1), (13, 1, 0, 4), (17, 3, 0, 2), (16, 3, 0, 2), (15, 3, 0, 1), (15, 2, 0, 4), (20, 3, 0, 2), (22, 4, 0, 1), (22, 4, 0, 1), (23, 4, 0, 2), (22, 4, 0, 2), (22, 4, 0, 2), (23, 3, 0, 2), (23, 4, 0, 2), (23, 4, 0, 2), (23, 4, 0, 2), (24, 4, 0, 1), (24, 4, 0, 1), (27, 5, 0, 0), (27, 5, 0, 0), (28, 4, 0, 0), (28, 4, 0, 0), (28, 4, 0, 0), (29, 4, 0, 0), (29, 4, 0, 0), (28, 4, 0, 0), (27, 3, 0, 1), (27, 3, 0, 1), (27, 3, 0, 1), (28, 2, 0, 2), (30, 3, 0, 1), (29, 3, 0, 1), (31, 4, 0, 0), (31, 4, 0, 0), (27, 2, 0, 2), (28, 3, 0, 1), (29, 4, 0, 1), (29, 3, 0, 1), (28, 3, 0, 1), (30, 4, 0, 0), (31, 2, 0, 1), (30, 4, 0, 0), (30, 3, 0, 1), (30, 3, 0, 1), (30, 3, 0, 1), (32, 3, 0, 0), (31, 3, 0, 1), (31, 3, 0, 1), (32, 3, 0, 0), (30, 3, 0, 1), (31, 3, 0, 1), (32, 2, 0, 1), (34, 2, 0, 1), (32, 2, 0, 1), (32, 3, 0, 1), (32, 2, 0, 1), (32, 3, 0, 1), (34, 1, 0, 2), (32, 2, 0, 1), (34, 2, 0, 1), (33, 1, 0, 2), (33, 2, 0, 1), (36, 1, 0, 1), (36, 1, 0, 1), (33, 2, 0, 1), (33, 2, 0, 2), (33, 2, 0, 1), (32, 3, 0, 1), (35, 1, 0, 2), (34, 1, 0, 2), (35, 1, 0, 2), (34, 2, 0, 1), (35, 1, 0, 2), (36, 2, 0, 2), (37, 2, 0, 2), (35, 2, 0, 2), (36, 2, 0, 2), (35, 0, 0, 2), (37, 2, 0, 2), (38, 2, 0, 2), (38, 1, 0, 5), (38, 2, 0, 4), (39, 1, 0, 5), (40, 0, 0, 4), (37, 1, 0, 2), (38, 0, 0, 4), (37, 1, 0, 4), (36, 2, 0, 2), (36, 0, 0, 5), (39, 1, 0, 4), (39, 0, 0, 5), (40, 0, 0, 6), (43, 2, 0, 5), (40, 1, 0, 6), (39, 1, 0, 7), (44, 3, 0, 5), (50, 6, 0, 6), (50, 5, 0, 4), (46, 4, 0, 7), (45, 4, 0, 7), (45, 1, 0, 8), (50, 4, 0, 5), (54, 5, 0, 7), (50, 6, 0, 5), (51, 4, 0, 7), (54, 4, 0, 7), (57, 7, 0, 7), (58, 7, 0, 6), (61, 8, 0, 5), (58, 8, 0, 7), (59, 9, 0, 7), (60, 9, 0, 4), (64, 9, 0, 4), (61, 9, 0, 6), (64, 10, 0, 4), (59, 8, 0, 6), (59, 9, 0, 5), (66, 11, 0, 4), (67, 12, 0, 6), (70, 12, 0, 6), (69, 12, 0, 7), (70, 13, 0, 6), (70, 13, 0, 6), (76, 13, 0, 7), (78, 16, 0, 7), (78, 16, 0, 7), (76, 15, 0, 7), (76, 15, 0, 7), (76, 16, 0, 6), (79, 13, 0, 10), (84, 15, 0, 10), (82, 16, 0, 8), (83, 17, 0, 7), (82, 16, 0, 8), (79, 15, 0, 8), (80, 14, 0, 8), (83, 15, 0, 9), (80, 17, 0, 8), (80, 16, 0, 8), (90, 18, 0, 9), (90, 17, 0, 8), (90, 19, 0, 8), (91, 18, 0, 9), (90, 19, 0, 8), (90, 17, 0, 9), (96, 19, 0, 9), (98, 22, 0, 8), (99, 21, 0, 8), (98, 23, 0, 8), (99, 23, 0, 8), (102, 24, 0, 12), (103, 25, 0, 12), (110, 23, 0, 13), (110, 26, 0, 10), (111, 27, 0, 13), (105, 25, 0, 10), (120, 28, 0, 12), (121, 30, 0, 10), (118, 28, 0, 10), (114, 29, 0, 10), (119, 28, 0, 13), (124, 30, 0, 9), (132, 31, 0, 9), (126, 30, 0, 10), (130, 30, 0, 10), (129, 28, 0, 12), (119, 28, 0, 8), (134, 32, 0, 13), (139, 32, 0, 9), (140, 31, 0, 13), (138, 32, 0, 12), (138, 32, 0, 10), (138, 32, 0, 12), (151, 34, 0, 14), (154, 36, 0, 15), (150, 35, 0, 15), (149, 35, 0, 15), (153, 33, 0, 16), (155, 36, 0, 13), (157, 36, 0, 16), (158, 35, 0, 14), (159, 37, 0, 15), (160, 38, 0, 16), (154, 31, 0, 15), (150, 33, 0, 13), (152, 34, 0, 12), (158, 34, 0, 13), (161, 35, 0, 16), (160, 34, 0, 14), (166, 37, 0, 14), (164, 36, 0, 12), (169, 37, 0, 14), (166, 35, 0, 13), (165, 37, 0, 13), (164, 36, 0, 12), (173, 38, 0, 14), (176, 37, 0, 16), (177, 40, 0, 15), (176, 37, 0, 16), (176, 39, 0, 15), (189, 39, 0, 17), (190, 39, 0, 20), (186, 39, 0, 16), (190, 40, 0, 17), (190, 39, 0, 18), (190, 40, 0, 16), (202, 43, 0, 14), (200, 41, 0, 16), (197, 41, 0, 16), (200, 42, 0, 16), (202, 41, 0, 18), (210, 44, 0, 16), (213, 44, 0, 17), (210, 43, 0, 16), (213, 44, 0, 16), (212, 43, 0, 16), (208, 43, 0, 16), (221, 46, 0, 15), (223, 47, 0, 16), (219, 45, 0, 17), (222, 46, 0, 17), (217, 46, 0, 15), (222, 47, 0, 16), (230, 49, 0, 18), (233, 48, 0, 20), (229, 48, 0, 17), (230, 48, 0, 20), (231, 47, 0, 18), (238, 51, 0, 22), (237, 53, 0, 21), (238, 53, 0, 21), (240, 53, 0, 21), (237, 50, 0, 23), (239, 49, 0, 24), (242, 54, 0, 24), (241, 54, 0, 24), (242, 54, 0, 24), (242, 54, 0, 25), (243, 54, 0, 24), (247, 56, 0, 25), (246, 56, 0, 25), (246, 58, 0, 26), (246, 57, 0, 26), (243, 56, 0, 25), (246, 59, 0, 26), (246, 60, 0, 28), (247, 59, 0, 28), (247, 59, 0, 28), (247, 58, 0, 31), (248, 59, 0, 29), (248, 62, 0, 28), (249, 63, 0, 29), (249, 62, 0, 29), (249, 63, 0, 29), (248, 62, 0, 28), (250, 64, 0, 30), (251, 65, 0, 32), (251, 65, 0, 32), (250, 64, 0, 31), (251, 65, 0, 32)]
reference_c = []
incoming_c = []

for cmyk in reference:
    reference_c.append(cmyk[0])

for cmyk in incoming:
    incoming_c.append(cmyk[0])

print("\nreference = ",reference_c,"\n")
print("\nincoming = ",incoming_c,"\n")

def average(indices):
    sum = 0
    avg = 0
    for i in indices:
        sum+=reference_c[i]
    avg = sum/len(indices)
    return np.uint8(avg)


LUT_in = [] # This is like input to LUT table
LUT_out = [] # This is like output that we get when input is passed

for value in range (256):
    if value in incoming_c:
        indices = [i for i, x in enumerate(incoming_c) if x == value] # will return an array that has all the indices of 'value' in incoming_c
        LUT_in.append(value)
        LUT_out.append(average(indices))
        #print("occurances of ",value," are, ",indices)
        #print("average look up value of ", value ,"is, ", average(indices),"\n")
print(len(LUT_in))
print(LUT_in)        
print(len(LUT_out))
print(LUT_out)        

